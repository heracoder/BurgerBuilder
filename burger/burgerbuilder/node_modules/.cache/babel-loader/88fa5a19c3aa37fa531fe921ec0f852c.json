{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andrea\\\\Documents\\\\burger\\\\burgerbuilder\\\\src\\\\containers\\\\BurgerBuilder\\\\BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      totalPrice: 4,\n      purchasable: false\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount + 1;\n      const updatedIngredient = { ...this.state.ingredients\n      };\n      updatedIngredient[type] = updatedCount;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredient\n      });\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      const updatedCount = oldCount - 1;\n      const updatedIngredient = { ...this.state.ingredients\n      };\n      updatedIngredient[type] = updatedCount;\n      const priceDeduction = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceDeduction;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredient\n      });\n    };\n  }\n\n  updatePurchaseState() {\n    const ingredients = { ...this.state.ingredients\n    };\n    const sum = Object.keys();\n  }\n\n  render() {\n    const disabledInfo = { ...this.state.ingredients\n    };\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    return /*#__PURE__*/React.createElement(Aux, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Burger, {\n      ingredients: this.state.ingredients,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(BuildControls, {\n      ingredientAdded: this.addIngredientHandler,\n      ingredientRemoved: this.removeIngredientHandler,\n      disabled: disabledInfo,\n      price: this.state.totalPrice,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["C:/Users/Andrea/Documents/burger/burgerbuilder/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","ingredients","totalPrice","purchasable","addIngredientHandler","type","oldCount","updatedCount","updatedIngredient","priceAddition","oldPrice","newPrice","setState","removeIngredientHandler","priceDeduction","updatePurchaseState","sum","Object","keys","render","disabledInfo","key"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Aux from '../../hoc/Aux';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad : 0.5,\r\n    cheese : 0.4,\r\n    meat : 1.3,\r\n    bacon : 0.7\r\n}\r\n\r\nclass BurgerBuilder extends Component{\r\n\r\n    // key value pairs to send value into the burger component\r\n    // this is an object declaration not an array\r\n    state = {\r\n        ingredients : {\r\n            salad : 0,\r\n            bacon : 0,\r\n            cheese : 0,\r\n            meat : 0\r\n        },\r\n        totalPrice : 4,\r\n        purchasable : false\r\n    }\r\n\r\n    updatePurchaseState () {\r\n        const ingredients = {\r\n            ...this.state.ingredients\r\n        }\r\n        const sum = Object.keys()\r\n    }\r\n    \r\n    addIngredientHandler = (type) => {\r\n        const oldCount = this.state.ingredients[type];\r\n        const updatedCount = oldCount + 1;\r\n        const updatedIngredient = {\r\n            ...this.state.ingredients\r\n        }\r\n        updatedIngredient[type] = updatedCount;\r\n        const priceAddition = INGREDIENT_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice + priceAddition;\r\n        this.setState({\r\n            totalPrice : newPrice,\r\n            ingredients : updatedIngredient\r\n        }) \r\n    }\r\n\r\n    removeIngredientHandler = (type) => {\r\n        const oldCount = this.state.ingredients[type];\r\n        if(oldCount <= 0){\r\n            return;\r\n        }\r\n        const updatedCount = oldCount - 1;\r\n        const updatedIngredient = {\r\n            ...this.state.ingredients\r\n        }\r\n        updatedIngredient[type] = updatedCount;\r\n        const priceDeduction = INGREDIENT_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice - priceDeduction;\r\n        this.setState({\r\n            totalPrice : newPrice,\r\n            ingredients : updatedIngredient\r\n        }) \r\n    }\r\n\r\n    render(){\r\n        const disabledInfo = {\r\n            ...this.state.ingredients\r\n        }\r\n        for( let key in disabledInfo){\r\n            disabledInfo[key] = disabledInfo[key] <= 0 \r\n        }\r\n        return(\r\n            <Aux>\r\n                <Burger ingredients={this.state.ingredients} />\r\n                <BuildControls \r\n                    ingredientAdded ={this.addIngredientHandler}\r\n                    ingredientRemoved = {this.removeIngredientHandler}\r\n                    disabled = {disabledInfo}\r\n                    price = {this.state.totalPrice}\r\n                />\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BurgerBuilder;\r\n\r\n"]},"metadata":{},"sourceType":"module"}