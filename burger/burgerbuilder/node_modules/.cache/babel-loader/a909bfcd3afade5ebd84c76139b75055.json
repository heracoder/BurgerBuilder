{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andrea\\\\Documents\\\\burger\\\\burgerbuilder\\\\src\\\\containers\\\\BurgerBuilder\\\\BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.5\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      totalPrice: 4\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount + 1;\n      const updatedIngredient = { ...this.state.ingredients\n      };\n      updatedIngredient[type] = updatedCount;\n    };\n\n    this.removeIngredientHandler = type => {};\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Aux, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Burger, {\n      ingredients: this.state.ingredients,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(BuildControls, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["C:/Users/Andrea/Documents/burger/burgerbuilder/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","INGREDIENT_PRICES","salad","cheese","meat","BurgerBuilder","state","ingredients","bacon","totalPrice","addIngredientHandler","type","oldCount","updatedCount","updatedIngredient","removeIngredientHandler","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,eAAhB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,aAAP,MAA0B,qDAA1B;AAEA,MAAMC,iBAAiB,GAAG;AACtBC,EAAAA,KAAK,EAAG,GADc;AAEtBC,EAAAA,MAAM,EAAG,GAFa;AAGtBC,EAAAA,IAAI,EAAG;AAHe,CAA1B;;AAMA,MAAMC,aAAN,SAA4BR,SAA5B,CAAqC;AAAA;AAAA;AAAA,SAIjCS,KAJiC,GAIzB;AACJC,MAAAA,WAAW,EAAG;AACVL,QAAAA,KAAK,EAAG,CADE;AAEVM,QAAAA,KAAK,EAAG,CAFE;AAGVL,QAAAA,MAAM,EAAG,CAHC;AAIVC,QAAAA,IAAI,EAAG;AAJG,OADV;AAOJK,MAAAA,UAAU,EAAG;AAPT,KAJyB;;AAAA,SAcjCC,oBAdiC,GAcTC,IAAD,IAAU;AAC7B,YAAMC,QAAQ,GAAG,KAAKN,KAAL,CAAWC,WAAX,CAAuBI,IAAvB,CAAjB;AACA,YAAME,YAAY,GAAGD,QAAQ,GAAG,CAAhC;AACA,YAAME,iBAAiB,GAAG,EACtB,GAAG,KAAKR,KAAL,CAAWC;AADQ,OAA1B;AAGAO,MAAAA,iBAAiB,CAACH,IAAD,CAAjB,GAA0BE,YAA1B;AACH,KArBgC;;AAAA,SAuBjCE,uBAvBiC,GAuBNJ,IAAD,IAAU,CAEnC,CAzBgC;AAAA;;AA2BjCK,EAAAA,MAAM,GAAE;AACJ,wBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,WAAW,EAAE,KAAKV,KAAL,CAAWC,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AAlCgC;;AAqCrC,eAAeF,aAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport Aux from '../../hoc/Aux';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad : 0.5,\r\n    cheese : 0.4,\r\n    meat : 1.5\r\n}\r\n\r\nclass BurgerBuilder extends Component{\r\n\r\n    // key value pairs to send value into the burger component\r\n    // this is an object declaration not an array\r\n    state = {\r\n        ingredients : {\r\n            salad : 0,\r\n            bacon : 0,\r\n            cheese : 0,\r\n            meat : 0\r\n        },\r\n        totalPrice : 4\r\n    }\r\n    \r\n    addIngredientHandler = (type) => {\r\n        const oldCount = this.state.ingredients[type];\r\n        const updatedCount = oldCount + 1;\r\n        const updatedIngredient = {\r\n            ...this.state.ingredients\r\n        }\r\n        updatedIngredient[type] = updatedCount;\r\n    }\r\n\r\n    removeIngredientHandler = (type) => {\r\n\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Aux>\r\n                <Burger ingredients={this.state.ingredients} />\r\n                <BuildControls />\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BurgerBuilder;\r\n\r\n"]},"metadata":{},"sourceType":"module"}